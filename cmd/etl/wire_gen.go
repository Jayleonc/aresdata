// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"aresdata/internal/conf"
	"aresdata/internal/data"
	"aresdata/internal/etl"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init etl application.
func wireApp(job *conf.Job, confData *conf.Data, logger log.Logger) (ETLRunner, func(), error) {
	cmdable := data.NewRedisClient(confData)
	dataData, cleanup, err := data.NewData(confData, cmdable, logger)
	if err != nil {
		return nil, nil, err
	}
	sourceDataRepo := data.NewSourceDataRepo(dataData, logger)
	videoRankRepo := data.NewVideoRankRepo(dataData)
	videoRankProcessor := etl.NewVideoRankProcessor(videoRankRepo, sourceDataRepo)
	v := etl.NewProcessorMap(videoRankProcessor)
	etlUsecase := etl.NewETLUsecase(sourceDataRepo, v)
	return etlUsecase, func() {
		cleanup()
	}, nil
}
