// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"aresdata/internal/biz"
	"aresdata/internal/conf"
	"aresdata/internal/data"
	"aresdata/pkg/fetcher"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init job application.
func wireApp(job *conf.Job, confData *conf.Data, logger log.Logger) (*CronService, func(), error) {
	cmdable := data.NewRedisClient(confData)
	dataData, cleanup, err := data.NewData(confData, cmdable, logger)
	if err != nil {
		return nil, nil, err
	}
	sourceDataRepo := data.NewSourceDataRepo(dataData, logger)
	feiguaFetcher := fetcher.NewFeiguaFetcher(confData, logger)
	fetcherUsecase := biz.NewFetcherUsecase(sourceDataRepo, feiguaFetcher, logger)
	cronService := NewCronService(fetcherUsecase, job, logger)
	return cronService, func() {
		cleanup()
	}, nil
}
