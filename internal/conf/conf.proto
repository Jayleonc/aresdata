syntax = "proto3";
package kratos.api;

option go_package = "aresdata/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
	Server server = 1;
	Data data = 2;
	Job job = 3; // 新增此行
}

message Server {
	message HTTP {
		string network = 1;
		string addr = 2;
		google.protobuf.Duration timeout = 3;
	}
	message GRPC {
		string network = 1;
		string addr = 2;
		google.protobuf.Duration timeout = 3;
	}
	HTTP http = 1;
	GRPC grpc = 2;
}

message Data {
	message Database {
		string driver = 1;
		string source = 2;
	}
	message Redis {
		string network = 1;
		string addr = 2;
		string password = 3;
		google.protobuf.Duration read_timeout = 4;
		google.protobuf.Duration write_timeout = 5;
	}
	Database database = 1;
	Redis redis = 2;
	repeated DataSource datasources = 4;
}

message DataSource {
  string name = 1;
  string base_url = 2;
  string type = 3;
  int64 throttle_min_wait_ms = 4;
  int64 throttle_max_wait_ms = 5;
  int32 timeout = 6;
  Headless headless = 7;

  message Headless {
    bool enabled = 1;
    string user_agent = 2;
  }
  string proxy = 8;
  repeated string account_pool = 9;
}

// Data_Feigua 结构体，包含 BaseUrl 和 Cookie 字段
message Feigua {
	string base_url = 1;

	// 节流配置
	int32 throttle_min_wait_ms = 3; // 最小等待时间（毫秒）
	int32 throttle_max_wait_ms = 4; // 最大等待时间（毫秒）

	string cookie_path = 5;         // 存放登录后 cookies 的文件路径
	string user_agent = 6;          // 浏览器 User-Agent
	int32 throttle_start_wait_ms = 7; // 节流起始等待时间（毫秒）

	// --- 新增 chromedp 相关配置 ---
	bool headless = 9;         // 是否以无头模式运行 (true: 后台运行, false: 显示浏览器界面，用于调试)
	string proxy = 10;            // 代理服务器地址, 例如 "http://user:pass@host:port"
	int32 timeout = 11;           // 单个采集任务的超时时间（秒）
	string cookie_content = 12;     // 直接在这里配置 cookie 的内容，优先级高于 cookie_path
}


// 在文件底部，`Data` message 定义之后，添加新的 Job message
message Job {
	string fetch_video_rank_cron = 1;
}
